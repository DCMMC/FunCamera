
//////// Tensorflow begin /////////

// set to 'bazel', 'cmake', 'makefile', 'none'
def nativeBuildSystem = 'none'

// Controls output directory in APK and CPU type for Bazel builds.
// NOTE: Does not affect the Makefile build target API (yet), which currently
// assumes armeabi-v7a. If building with make, changing this will require
// editing the Makefile as well.
// The CMake build has only been tested with armeabi-v7a; others may not work.
def cpuType = 'armeabi-v7a'

// Output directory in the local directory for packaging into the APK.
def nativeOutDir = 'libs/' + cpuType

// Default to building with Bazel and override with make if requested.
def nativeBuildRule = 'buildNativeBazel'
def demoLibPath = '../tensorflow/bazel-bin/tensorflow/examples/android/libtensorflow_demo.so'
def inferenceLibPath = '../tensorflow/bazel-bin/tensorflow/contrib/android/libtensorflow_inference.so'
if (nativeBuildSystem == 'makefile') {
    nativeBuildRule = 'buildNativeMake'
    demoLibPath = '.../tensorflow/tensorflow/contrib/makefile/gen/lib/libtensorflow_demo.so'
    inferenceLibPath = '../tensorflow/tensorflow/contrib/makefile/gen/lib/libtensorflow_inference.so'
}

// If building with Bazel, this is the location of the bazel binary.
// NOTE: Bazel does not yet support building for Android on Windows,
// so in this case the Makefile build must be used as described above.
def bazelLocation = '/usr/local/bin/bazel'

// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/assets'
project.ext.TMP_DIR   = project.buildDir.toString() + '/downloads'

///// tensorflow end ////////

apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    defaultConfig {
        applicationId "tk.dcmmcc.funcamera"
        minSdkVersion 23
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    ///////// tensorflow begin ////////
    lintOptions {
        abortOnError false
    }


    /*
    sourceSets {
        main {
            if (nativeBuildSystem == 'bazel') {
                // TensorFlow Java API sources.
                java {
                    srcDir '../../tensorflow/tensorflow/java/src/main/java'
    */
                    //exclude '**/examples/**'
    /*

                }

                // Android TensorFlow wrappers, etc.
                java {
                    srcDir '../../tensorflow/tensorflow/contrib/android/java'
                }
            }
            // Android demo app sources.
            java {
                srcDir 'src/java'
            }

            manifest.srcFile 'AndroidManifest.xml'
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = [project.ext.ASSET_DIR]
            jniLibs.srcDirs = ['libs']
        }

        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    */
}


// ????tensorflow/examples/android?????
task buildNativeBazel(type: Exec) {
    workingDir '../../..'
    commandLine bazelLocation, 'build', '-c', 'opt',  \
         'tensorflow/examples/android:tensorflow_native_libs',  \
         '--crosstool_top=//external:android/crosstool',  \
         '--cpu=' + cpuType,  \
         '--host_crosstool_top=@bazel_tools//tools/cpp:toolchain'
}

task buildNativeMake(type: Exec) {
    environment "NDK_ROOT", android.ndkDirectory
    // Tip: install ccache and uncomment the following to speed up
    // builds significantly.
    // environment "CC_PREFIX", 'ccache'
    workingDir '../../..'
    commandLine 'tensorflow/contrib/makefile/build_all_android.sh',  \
         '-s',  \
         'tensorflow/contrib/makefile/sub_makefiles/android/Makefile.in',  \
         '-t',  \
         'libtensorflow_inference.so libtensorflow_demo.so'  \
         //, '-T'  // Uncomment to skip protobuf and speed up subsequent builds.
}


task copyNativeLibs(type: Copy) {
    from demoLibPath
    from inferenceLibPath
    into nativeOutDir
    duplicatesStrategy = 'include'
    dependsOn nativeBuildRule
    fileMode 0644
}

tasks.whenTaskAdded { task ->
    if (nativeBuildSystem == 'bazel') {
        if (task.name == 'assembleDebug') {
            task.dependsOn 'copyNativeLibs'
        }
        if (task.name == 'assembleRelease') {
            task.dependsOn 'copyNativeLibs'
        }
    }
}

// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
apply from: "download-models.gradle"

dependencies {
    if (nativeBuildSystem == 'none') {
        compile 'org.tensorflow:tensorflow-android:+'
    }
}

////// tensorflow end ////////

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //默认是sdk26
    //implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    //欢迎界面用的库
    implementation 'com.android.support:support-v4:25.4.0'
    compile 'com.stephentuso:welcome:1.4.1'

    testImplementation 'junit:junit:4.12'
    // Set this dependency to use JUnit 4 rules
    androidTestCompile 'com.android.support.test:runner'
    // Set this dependency to build and run Espresso tests
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.1'

    //用到的support lib modules
    //下面四个用于MaterialDrawer
    implementation supportDependencies.appCompat
    implementation supportDependencies.recyclerView
    implementation supportDependencies.supportAnnotation
    implementation supportDependencies.design
    //这个用于关于中的CardView
    implementation supportDependencies.cardView

    //MaterialDrawer 抽屉菜单
    implementation("com.mikepenz:materialdrawer:6.0.2@aar") {
        transitive = true
    }

    //常用的图标
    // icon fonts used inside the sample
    // https://github.com/mikepenz/Android-Iconics
    implementation 'com.mikepenz:google-material-typeface:3.0.1.1.original@aar'
    implementation 'com.mikepenz:fontawesome-typeface:4.7.0.1@aar'
    implementation 'com.mikepenz:octicons-typeface:3.0.0.1@aar'

    //加载图片的常用库
    // used to showcase how to load images
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.github.bumptech.glide:glide:3.8.0'

    //用于MaterialDrawer的动画特效
    //used to provide different itemAnimators for the RecyclerView
    //https://github.com/mikepenz/ItemAnimators
    implementation 'com.mikepenz:itemanimators:1.0.1@aar'

    //自动生成该软件用到的开源项目列表
    // used to generate the Open Source section
    // https://github.com/mikepenz/AboutLibraries
    implementation('com.mikepenz:aboutlibraries:6.0.1@aar') {
        transitive = true
    }

    compile 'org.tensorflow:tensorflow-android:+'
}